
from MST_sequential import *

G = construct_graph()

procs = dict() # dict mapping process numbers to processes

class P(DistProcess):
    
    def setup(my_edges):
        my_edges = my_edges

        my_min_wt_edge = min(my_edges, key=my_edges.get)
        
        print(self, my_edges, " --> ",my_min_wt_edge)

    def cs():
        pass

    def OnRequest(ts):
        pass

    def OnReply(m):
        pass

    def main():
        cs()

def main():
    use_channel("tcp")
    
    global procs
    procs = createprocs(P, set(G.nodes()))

    # setup the processes
    ps = set(procs.values())
    for p in ps:
        p_edges = { n : d['weight'] for (n,d) in G[repr(p)].items() }
        setupprocs([p], [p_edges])

    startprocs(ps)

    for p in (ps):
        p.join()
    
